# ---- Object Setup ----
# The object can be created as using primitive shapes from box_object, ellipsoid_object, cylinder_object, or from a mesh file (mesh_object). 
# For each task setup.yaml, keep one object only. Delete the others

box_object:
  shape: [20,2.5,2.5]
  # shape: [9,9,3]
  contact_file: "assets/box_l1_xyplane.csv" # Relative path in the task folder to the file of sampled surface points on a cube of unit length. We will automatically scale the contact points according to the shape.
  negate_contact_normal: false # Contact normals should point inwards. Compare this with the contact_file and decide whether to negate the contact normal.
  disabled_normal_directions: [[0,0,-1], [0,0,1]] # If you want to disable some contact points on the object using contact normal directions (pointing inward to the object surface), specify them here. 

maximum_surface_contact_points: 100 # Maximum number of contact points to sample on the object surface

# ---- Environment Setup ----

# The environment can be created using primitive shapes. We allow maximum 20 shapes for each primitive category.
environment: 
  block_1:
    dimension: [100,100,1]
    location: [0,0,-0.4999]

characteristic_length: 1

robot_object_friction_coefficient: 0.5
environment_object_friction_coefficient: 0.2

task_dynamics: "quasistatic" # "quasistatic", "quasidynamic", "none", "force_closure"
object_weight: [0,0,-1,0,0,0]
object_inertia: 
  [ 1, 0, 0, 0, 0, 0, 
    0, 1, 0, 0, 0, 0, 
    0, 0, 1, 0, 0, 0, 
    0, 0, 0, 0.167, 0, 0, 
    0, 0, 0, 0, 0.167, 0, 
    0, 0, 0, 0, 0, 0.167 ]

# ---- Robot ----

# 5 delta robots 
delta_array:
  finger_radius: 0.75
  workspace_radius: 2.4
  workspace_height: 6
  patch_contact: true
  locations:
    robot_1: [4.3301, -3.75, 0]
    robot_2: [4.3301, -7.5, 0]
    robot_3: [4.3301, -11.25, 0]
    robot_4: [8.6602, -5.915, 0]
    robot_5: [8.6602, -9.665, 0]

 

# ---- Start and Goal Pose ----
# A pose is specified by the position and quaternion: [x, y, z, qx, qy, qz, qw].

object_start_pose: [6.06214,-7.616,1.25,0,0,0.7071,0.7071]
object_goal_pose: [6.06214,-7.616,1.25,0,0,0,1]
# ---- Run options ----
random_seed: -1

# ---- Planner options ----

refine_object_trajectory: # whether to refine the trajectory for 2nd level search
  enabled: true
  distance: 1.0

transition_pruning: false

rrt_options:
  max_samples: 50
  goal_biased_prob: 1.0
  goal_thr: 0.2
  extend_epsilon:
    translation: 3
    rotation_degree: 50
  weight:
    rotation: 1.0
    translation: 1.0
  sample:
    position_upper_bound: [6, -6, 1.5]
    position_lower_bound: [3, -15, 1.5]
    rotation: 
      SO3_enabled: false
      axis: [0,0,1] # if SO3_enabled is false, sample rotation on this axis
  search_with_manipulator_config: false # whether to save manipulator config in the search (and the search will consider manipulator config as well)

mcts_options:
  max_time: 5
  l1_1st_max_iterations: 10
  l1_max_iterations: 1
  l2_1st_max_iterations: 10
  l2_max_iterations: 1
  final_l2_1st_max_iterations: 20
  final_l2_max_iterations: 5

# ---- Reward and Probability ----
grasp_measure_charac_length: -1 # <0, disable grasp measure

level_1_reward: "CMGLevel1Reward"
level_2_reward: "CMGLevel2Reward"

# "inhand" (must have workspace limit) or "env"
action_probability_L2: "inhand"

# ---- Output and Visualization ----

# Visualization options: 
# "csv": show the trajecotry in the in output.csv under the task folder. Press space to play the trajectory.
# "setup": show the task setup. Press space to show start and goal poses.
# "save": plan a trajectory, saved in output.csv, no visualization
# "show": plan a trajectory, saved in output.csv, and show the results. Press space to play the trajectory.

visualize_option: "csv"